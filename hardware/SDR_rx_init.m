function radioRx = SDR_rx_init(SDRRx, SDRv, txInfo)
switch SDRv.Radio
    case 'B210'
        SDRRx.MasterClockRate = 40000000;  %Hz
        % Radio values on lteSetParams
        SDRRx.CenterFrequency    = SDRv.CenterFrequency + SDRv.RxOffset;
        SDRRx.Gain               = SDRv.RxRadioGain;
        SDRRx.DecimationFactor   = 2.*round((SDRRx.MasterClockRate/txInfo.SamplingRate)/2);

        switch txInfo.CellRefP
            case 1
                SDRRx.Channel = 1;
            case 2
                SDRRx.Channel = [1 2];
            otherwise
                error('USRP B210 is not able to receive more than 2 antennas. Change the value of enb.CellRefP in setParams.m');
        end

        % Set up transmitter radio object to use the found radio
        switch SDRRx.Platform
          case {'B200','B210'}
            radioRx = comm.SDRuReceiver(...
                'Platform',             SDRRx.Platform, ...
                'SerialNum',            SDRRx.Address, ...
                'MasterClockRate',      SDRRx.MasterClockRate, ...
                'CenterFrequency',      SDRRx.CenterFrequency,...
                'Gain',                 SDRRx.Gain, ...
                'DecimationFactor',     SDRRx.DecimationFactor,...
                'NumFramesInBurst',     SDRRx.NumFramesInBurst,...
                'EnableBurstMode',      true,...
                'ChannelMapping',       SDRRx.Channel);
          case {'X300','X310'}
            radioRx = comm.SDRuReceiver(...
                'Platform',             SDRRx.Platform, ...
                'IPAddress',            SDRRx.Address, ...
                'MasterClockRate',      SDRRx.MasterClockRate, ...
                'CenterFrequency',      SDRRx.CenterFrequency,...
                'Gain',                 SDRRx.Gain, ...
                'DecimationFactor',      SDRRx.InterpolationFactor,...
                'NumFramesInBurst',     SDRRx.NumFramesInBurst,...
                'EnableBurstMode',      true);
          case {'N200/N210/USRP2'}
            radioRx = comm.SDRuReceiver(...
                'Platform',             SDRRx.Platform, ...
                'IPAddress',            SDRRx.Address, ...
                'CenterFrequency',      SDRRx.CenterFrequency,...
                'Gain',                 SDRRx.Gain, ...
                'DecimationFactor',      SDRRx.InterpolationFactor,...
                'NumFramesInBurst',     SDRRx.NumFramesInBurst,...
                'EnableBurstMode',      true);
        end
    case 'BladeRF'
        SDRRx.rx.frequency =  SDRv.CenterFrequency;
        SDRRx.rx.samplerate = 30e6;
        SDRRx.rx.bandwidth = 20e6;
        SDRRx.rx.vga1 = SDRv.RadioGain;
        SDRRx.rx.vga2 = 5;
end
